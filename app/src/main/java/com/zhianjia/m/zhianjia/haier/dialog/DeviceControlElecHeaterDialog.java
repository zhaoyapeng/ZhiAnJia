package com.zhianjia.m.zhianjia.haier.dialog;import android.app.Dialog;import android.content.Context;import android.text.TextUtils;import android.view.View;import android.widget.Button;import android.widget.CompoundButton;import android.widget.CompoundButton.OnCheckedChangeListener;import android.widget.Switch;import android.widget.TextView;import com.haier.uhome.usdk.api.interfaces.IuSDKCallback;import com.haier.uhome.usdk.api.uSDKArgument;import com.haier.uhome.usdk.api.uSDKDevice;import com.haier.uhome.usdk.api.uSDKDeviceAlarm;import com.haier.uhome.usdk.api.uSDKDeviceAttribute;import com.haier.uhome.usdk.api.uSDKDeviceStatusConst;import com.haier.uhome.usdk.api.uSDKErrorConst;import com.zhianjia.m.zhianjia.R;import com.zhianjia.m.zhianjia.haier.util.Util;import java.util.ArrayList;import java.util.List;/** * 演示交互電熱水器 * control electronic water heater * uplusId/typeId:111c120024000810060500418001840000000000000000000000000000000000 */public class DeviceControlElecHeaterDialog extends Dialog {	private TextView elecHeaterOnOffTextView = null;	private TextView elecHeaterTempTextView = null;		private Switch elecHeaterOnOffSwitch = null;	private uSDKDevice selecteduSDKDevice;		private Button applyElecHeaterAppointMentButton;		private TextView elecHeaterAlarmTextView;	public DeviceControlElecHeaterDialog(Context context) {		super(context, R.style.notitle_dialog);		this.setContentView(R.layout.devicecontrol_elecheater_layout);		this.initUI();		this.initUIEvent();	}		public void setSelecteduSDKDevice(uSDKDevice selecteduSDKDevice) {		this.selecteduSDKDevice = selecteduSDKDevice;	}	public void setOnCancelListener(			android.view.View.OnClickListener listener) {		//button.setOnClickListener(listener);	}		/**	 * SmartDevice Status:STATUS_CONNECTED || STATUS_READY	 * 更新UI電熱水器屬性狀態	 */	public void updateSmartDeviceStatus (            List<uSDKDeviceAttribute> propertiesChanged, uSDKDevice myDevice) {		uSDKDeviceStatusConst myDeviceStatus = myDevice.getStatus();				if((myDeviceStatus == uSDKDeviceStatusConst.STATUS_CONNECTED ||		   myDeviceStatus == uSDKDeviceStatusConst.STATUS_READY)) {						uSDKDeviceAttribute smartDeviceAttrOn  =					Util.queryCode6ValueByKey("206001", myDevice);						uSDKDeviceAttribute smartDeviceAttrTemp  =					Util.queryCode6ValueByKey("206002", myDevice);						String onValue = smartDeviceAttrOn.getAttrValue();			if(TextUtils.isEmpty(onValue) != true) {				elecHeaterOnOffTextView.setText(onValue);							}						String temp = smartDeviceAttrTemp.getAttrValue();			elecHeaterTempTextView.setText(temp);						List<uSDKDeviceAlarm> alarmList = myDevice.getAlarmList();			uSDKDeviceAlarm deviceAlarm = alarmList.get(0);			elecHeaterAlarmTextView.setText(deviceAlarm.getAlarmValue());		}			}	private void initUI() {		elecHeaterOnOffTextView = (TextView)				this.findViewById(R.id.code_elecheater_onoff_tv);				elecHeaterTempTextView = (TextView)				this.findViewById(R.id.code_elecheater_temp);				elecHeaterOnOffSwitch = (Switch)				this.findViewById(R.id.elecheater_onoff_switch);				applyElecHeaterAppointMentButton = (Button)				this.findViewById(R.id.code_eleheater_appointment_button);				elecHeaterAlarmTextView = (TextView)				this.findViewById(R.id.code_elecheater_alarm);	}		/**	 * reference uplusId/typeId DOC to write command	 * 參考ID開發文檔編寫指令和查詢報警	 */	private void initUIEvent() {		elecHeaterOnOffSwitch.setOnCheckedChangeListener(new OnCheckedChangeListener() {						@Override			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {				if(isChecked) {					selecteduSDKDevice.writeAttribute("206001", "306001", new IuSDKCallback() {												@Override						public void onCallback(uSDKErrorConst result) {							if(result == uSDKErrorConst.RET_USDK_OK) {								System.out.println("command succeed！");														} else if(result == uSDKErrorConst.ERR_USDK_TIMEOUT) {							} else {							}													}					}); 									} else {					selecteduSDKDevice.writeAttribute("206001", "306000", new IuSDKCallback() {												@Override						public void onCallback(uSDKErrorConst result) {							System.out.println("cmd result:" + result);													}					});									}							}		});				/**		 * 1.reference uplusId/typeId DOC to write group command		 * 2.uSDKArgument: command element(key and value)		 * 3.000007: group command name		 * 4.10: time out value 10s		 */		applyElecHeaterAppointMentButton.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				List<uSDKArgument> mAttrs = new ArrayList<uSDKArgument>();				mAttrs.add(new uSDKArgument("20600E", "01:02"));				mAttrs.add(new uSDKArgument("20600F", "02:03"));								selecteduSDKDevice.execOperation("000007", mAttrs, 10, new IuSDKCallback() {					@Override					public void onCallback(uSDKErrorConst result) {						if (result != uSDKErrorConst.RET_USDK_OK) {							System.err.println(result);						}					}				});			}		});			}	}